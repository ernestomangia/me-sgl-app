@model ME.Libros.Web.Models.CobradorViewModel
@if (Model.Id > 0)
{
    <div class="row">
        <div class="col-md-10">
            <div class="form-group form-group-sm">
                @Html.LabelFor(c => c.Id, new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.TextBoxFor(c => c.Id, new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(c => c.Nombre, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(c => c.Nombre, new { @class = "form-control", placeholder = "Nombre" })
            </div>
        </div>
    </div>
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(c => c.Apellido, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(c => c.Apellido, new { @class = "form-control", placeholder = "Apellido" })
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(c => c.Dni, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(c => c.Dni, new { @class = "form-control", placeholder = "Dni" })
            </div>
        </div>
    </div>
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(c => c.PorcentajeComision, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(c => c.PorcentajeComision, new { @class = "form-control", placeholder = "PorcentajeComision" })
            </div>
        </div>
    </div>

</div>

<div class="row">
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(c => c.ProvinciaId, Messages.Provincia, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.DropDownListFor(c => c.ProvinciaId, Model.Provincias, "Seleccione", new { @class = "form-control provincia", placeholder = "Provincia", required = "required", data_val_required = string.Format(ErrorMessages.Requerida, Messages.Provincia) })

            </div>
        </div>
    </div>
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(c => c.LocalidadId, Messages.Localidad, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.DropDownListFor(c => c.LocalidadId, Model.Localidades, "Seleccione", new { @class = "form-control localidad", placeholder = "Localidad", required = "required", data_val_required = string.Format(ErrorMessages.Requerida, Messages.Localidad) })

            </div>
        </div>
    </div>

</div>

<div class="row">
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(c => c.Direccion, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(c => c.Direccion, new { @class = "form-control", placeholder = Messages.Direccion })
            </div>
        </div>
    </div>
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(c => c.Email, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(c => c.Email, new { @class = "form-control", type = "email", placeholder = "Email" })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(c => c.TelefonoFijo, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(c => c.TelefonoFijo, new { @class = "form-control", type = "tel", placeholder = Messages.TelefonoFijo })
            </div>
        </div>
    </div>
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(c => c.Celular, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(c => c.Celular, new { @class = "form-control", type = "tel", placeholder = "Celular" })
                Ej. (343-6111222)
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-10">
        <div class="col-md-10 col-md-offset-2">
            <div class="form-group form-group-sm">
                <select multiple="multiple" name="localidadesAsignadas_dualList" id="localidadesAsignadas_dualList">
                    @foreach (var item in Model.Localidades)
                    {
                        var bandera = Model.LocalidadesAsignadas.All(item2 => item.Value != item2.Id.ToString());

                        if (bandera)
                        {
                            <option value=@item.Value>@item.Text</option>
                        }
                    }

                    @foreach (var item in Model.LocalidadesAsignadas)
                    {
                        <option selected="selected" value=@item.Id>@item.Nombre</option>
                    }
                </select>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(funcion());

    function funcion() {
        var demo1 = $('select[name="localidadesAsignadas_dualList"]').bootstrapDualListbox({
            nonSelectedListLabel: 'Localidades',
            selectedListLabel: 'Localidades asignadas',
            preserveSelectionOnMove: 'moved',
            moveOnSelect: false,
            filterPlaceHolder: 'Filtro',
            infoTextFiltered: '<span class="label label-success">Filtrado</span> {0} de {1}',
            infoTextEmpty: '0 localidades',
            infoText: 'Mostrando {0}',
            filterTextClear: 'Ver todos'
        });

        demo1.bootstrapDualListbox('refresh', true);

        //$("#bootstrap-duallistbox-nonselected-list_localidadesAsignadas_dualList").dblclick(function () {

        //    var option = $("#bootstrap-duallistbox-nonselected-list_localidadesAsignadas_dualList option:selected");

        //    demo1.append('<option value='+ option.attr('value') +' selected>' + option.text() +'</option>');
        //    $("#bootstrap-duallistbox-nonselected-list_localidadesAsignadas_dualList").remove(option);
        //    demo1.bootstrapDualListbox('refresh', true);
        //    console.log(option);
        //  //      option.remove();
        //});

        //$("#bootstrap-duallistbox-selected-list_localidadesAsignadas_dualList").dblclick(function () {

        //    var option = $("#bootstrap-duallistbox-selected-list_localidadesAsignadas_dualList option:selected");

        //    $("#bootstrap-duallistbox-nonselected-list_localidadesAsignadas_dualList").append(option);
        //    $("#bootstrap-duallistbox-selected-list_localidadesAsignadas_dualList").remove(option);
        //    demo1.bootstrapDualListbox('refresh', true);
        //});

    };

    $(".provincia").on("change", function () {
        var idProvincia = $(".provincia :selected").attr("value");
        if (idProvincia > 0) {
            $.ajax({
                method: "GET",
                url: '@Url.Action("ListarLocalidades", "Localidad")' + "?id=" + idProvincia,
                dataType: "json",
                error: function (jqXHR, status, error) {
                    mensajeError("Error: " + error + " - Status: " + status);
                },
                success: function (data) {
                    $(".localidad").empty();
                    if (data.length > 0) {
                        $.each(data, function (key, value) {
                            $(".localidad").append(new Option(value.Nombre, value.Id));
                        });
                    } else {
                        $(".localidad").append(new Option("Seleccione", ""));
                    }
                },
                timeout: 10000,
                cache: false
            });
        } else {
            $(".localidad").empty().append(new Option("Seleccione", ""));
        }
    });
</script>

