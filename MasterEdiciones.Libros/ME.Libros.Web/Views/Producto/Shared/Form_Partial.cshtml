@model ME.Libros.Web.Models.ProductoViewModel
@if (Model.Id > 0)
{
    <div class="row">
        <div class="col-md-10">
            <div class="form-group form-group-sm">
                @Html.LabelFor(p => p.Id, new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.TextBoxFor(p => p.Id, new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(p => p.Nombre, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(p => p.Nombre, new { @class = "form-control", placeholder = "Nombre" })
            </div>
        </div>
    </div>
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(p => p.Descripcion, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(p => p.Descripcion, new { @class = "form-control", placeholder = Messages.Descripcion })
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(p => p.CodigoBarra, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(p => p.CodigoBarra, new { @class = "form-control", placeholder = Messages.CodigoBarra })
            </div>
        </div>
    </div>
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(p => p.Stock, new { @class = "col-md-4 control-label" })
            <div class="col-md-2">
                @Html.TextBoxFor(p => p.Stock, new { @class = "form-control", maxlength = 6, data_val_number = string.Format(ErrorMessages.Entero, Messages.Stock) })
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(p => p.PrecioCosto, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(p => p.PrecioCosto, new { @class = "form-control", maxlength = 10, data_val_number = string.Format(ErrorMessages.Decimal, Messages.PrecioCosto) })
            </div>
        </div>
    </div>
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(p => p.PrecioVenta, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(p => p.PrecioVenta, new { @class = "form-control", maxlength = 10, data_val_number = string.Format(ErrorMessages.Decimal, Messages.PrecioVenta) })
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(p => p.RubroId, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.DropDownListFor(p => p.RubroId, Model.Rubros, new { @class = "form-control rubro" })
            </div>
        </div>
    </div>
    <div class="col-md-5">
        <div class="form-group form-group-sm">
            @Html.LabelFor(e => e.EditorialId, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.DropDownListFor(e => e.EditorialId, Model.Editoriales, new { @class = "form-control editorial" })
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-10">
        <div class="alert alert-danger validationSummary @(ViewData.ModelState.IsValid ? "hide" : "")" role="alert">
            <a class="close" data-hide="alert" aria-hidden="true">×</a>
            <b>Mensajes:</b>
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationSummary().ToString()))
        </div>
    </div>
</div>

<script type="text/javascript">
    $('#CodigoBarra').on('keypress', function (e) {
        if (e.keyCode == 13) {
            e.preventDefault();
            //return false;
        }
    });
</script>