@using System.Globalization
@using System.Runtime.Serialization
@using ME.Libros.Utils.Enums
@model IEnumerable<ME.Libros.Web.Models.VentasPorCobrarViewModel>

    @{
    ViewBag.Title = "VentasPorCobrarPDF";
    }

    <style type="text/css">
        .page-breaker {
            display: block;
            clear: both;
            page-break-after: always;
            mso-page-numbers-start: 1;
        }

        .table th {
            text-align: center
        }

        .table td {
            text-align: center
        }

    </style>

    <h2 style="text-align:center">Ventas pendientes de cobro</h2>

    @if (Model.Any())
    {
        foreach (var ventaPorCobrar in Model)
        {
            <div class="page-breaker">
                
                <div class="row">
                    <div class="col-xs-3">@string.Format("{0}, {1}",  CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(ventaPorCobrar.Month).ToUpper(), ventaPorCobrar.Year)</div>
                </div>

                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th rowspan="2" style="vertical-align: middle"> Venta N°</th>
                            <th colspan="3" >Cliente </th>
                            <th colspan="2" >Cuotas </th>
                            <th colspan="3" >Venta</th>
                        </tr>
                        <tr>
                            <th class="columnaCodigo noSort">N°</th>
                            <th>CUIL</th>
                            <th> Nombre y Apellido</th>
                            <th>Cobradas/Total</th>
                            <th>Monto Cuota</th>
                            <th>Monto Total</th>
                            <th>Cobrado</th>
                            <th>Saldo</th>
                        </tr>
                    </thead>
                    @foreach (var vtaPCobrar in ventaPorCobrar.Ventas)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => vtaPCobrar.Id)</td>
                            <td>@Html.DisplayFor(modelItem => vtaPCobrar.ClienteId)</td>
                            <td>@Html.DisplayFor(modelItem => vtaPCobrar.Cliente.Cuil)</td>
                            <td>@Html.DisplayFor(modelItem => vtaPCobrar.Cliente.Nombre), @Html.DisplayFor(modelItem => vtaPCobrar.Cliente.Apellido)</td>
                            <td>@vtaPCobrar.Cuotas.Count(c=>c.Estado==EstadoCuota.Pagada)/@Html.DisplayFor(modelItem => vtaPCobrar.CantidadCuotas)</td>
                            <td>@Html.DisplayFor(modelItem => vtaPCobrar.MontoCuota)</td>
                            <td>@Html.DisplayFor(modelItem => vtaPCobrar.MontoVendido)</td>
                            <td>@Html.DisplayFor(modelItem => vtaPCobrar.MontoCobrado)</td>
                            <td>@Html.DisplayFor(modelItem => vtaPCobrar.Saldo)</td>
                        </tr>
                    }
                 
                  

                </table>
                
                
                <div style="text-align: right">
                    <b>SubTotal Cobrado: </b>   @string.Format("{0}", ventaPorCobrar.Ventas.Sum(c => c.MontoCobrado))
                </div>
            </div>
        }
    }
    else
    {
        <h4>No existen ventas pendientes de cobro</h4>
    }
