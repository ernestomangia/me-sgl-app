@using ME.Libros.Utils.Enums
@using ME.Libros.Web.Extensions
@model ME.Libros.Web.Models.VentaViewModel
@{
    var estado = new Dictionary<EstadoVenta, string>
    {
        { EstadoVenta.Vigente, "info" },
        { EstadoVenta.Anulada, "danger" },
        { EstadoVenta.Pagada, "success" }
    };
}

@if (Model.Id > 0)
{
    <div class="row">
        <div class="col-md-6">
            <div class="form-group form-group-sm">
                @Html.LabelFor(c => c.Id, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(c => c.Id, new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group form-group-sm">
                <div class="col-md-offset-4 col-md-8">
                    <h2 style="margin:0;">
                        <span class="label label-@(estado[Model.Estado])" style="display: block;">@Html.DisplayTextFor(v => v.Estado)</span>
                    </h2>
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-6">
        <div class="form-group form-group-sm">
            @Html.LabelFor(v => v.FechaVenta, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(v => v.FechaVenta, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", placeholder = Messages.FechaVenta })
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group form-group-sm">
            @Html.LabelWithTooltipFor(v => v.FechaCobro, new
                                               {
                                                   @class = "col-md-4 control-label",
                                                   data_placement = "bottom",
                                                   title = "Fecha en la que el cliente se compromete a abonar la 1º cuota del plan. Las fechas de vencimiento de las restantes cuotas se determinan a partir de ésta."
                                               })
            <div class="col-md-8">
                @Html.TextBoxFor(v => v.FechaCobro, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", placeholder = Messages.FechaCobro })
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <div class="form-group form-group-sm">
            @Html.LabelFor(v => v.ClienteId, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.DropDownListFor(c => c.ClienteId, Model.Clientes, "Seleccione", new { @class = "form-control" })
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group form-group-sm">
            @Html.LabelWithTooltipFor(v => v.CobradorId, new
                                               {
                                                   @class = "col-md-4 control-label",
                                                   data_placement = "bottom",
                                                   title = "Cobrador actual de la venta."
                                               })
            <div class="col-md-8">
                @Html.DropDownListFor(c => c.CobradorId, Model.Cobradores, "Seleccione", new
                {
                    @class = ("form-control" + (!Model.EsVigente ? " disabled" : ""))
                })
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <div class="form-group form-group-sm">
            @Html.LabelFor(v => v.VendedorId, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.DropDownListFor(c => c.VendedorId, Model.Vendedores, "Seleccione", new { @class = "form-control" })
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group form-group-sm">

        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active">
                <a href="#TabVentaDetalle" aria-controls="TabVentaDetalle" role="tab" data-toggle="tab">Detalle</a>
            </li>
            <li role="presentation">
                <a href="#TabFormaPago" aria-controls="TabFormaPago" role="tab" data-toggle="tab">Forma de pago</a>
            </li>
        </ul>

        <div class="tab-content">
            <div id="TabVentaDetalle" role="tabpanel" class="tab-pane fade in active">
                @{ Html.RenderAction("Index", "VentaItem", new { ventaItemViewModels = Model.Items }); }
                @if (Model.Estado == EstadoVenta.None)
                {
                    for (var i = 0; i < Model.Items.Count; i++)
                    {
                        @Html.HiddenFor(vi => Model.Items[i].ProductoId, new { id = "Items[" + i + "].ProductoId", @class = "hiddenProductoId" })
                        @Html.HiddenFor(vi => Model.Items[i].Cantidad, new { id = "Items[" + i + "].Cantidad", @class = "hiddenCantidad" })
                        @Html.HiddenFor(vi => Model.Items[i].PrecioVentaVendido, new { id = "Items[" + i + "].PrecioVentaVendido", @class = "hiddenPrecioVentaVendido" })
                        @Html.HiddenFor(vi => Model.Items[i].MontoItemVendido, new { id = "Items[" + i + "].MontoItemVendido", @class = "hiddenMontoItemVendido" })
                    }
                }
            </div>
            <div id="TabFormaPago" role="tabpanel" class="tab-pane fade">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group form-group-sm">
                            @Html.LabelFor(v => v.PlanPagoId, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(v => v.PlanPagoId, Model.PlanesPago, "Seleccione", new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="col-md-offset-4 col-md-8">
                            <h3>
                                <span class="label label-default" style="text-align: left;">
                                    $ <span id="diferenciaMontosVenta">-</span>
                                </span>
                            </h3>
                            <h6>* Relación entre el Monto vendido y el Monto calculado</h6>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group form-group-sm">
                            @Html.LabelFor(v => v.MontoCalculado, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                <div class="input-group">
                                    <div class="input-group-addon">$</div>
                                    @Html.TextBoxFor(v => v.MontoCalculado, new { @class = "form-control", placeholder = Messages.MontoCalculado, disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group form-group-sm">
                            @Html.LabelFor(v => v.MontoVendido, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                <div class="input-group">
                                    <div class="input-group-addon">$</div>
                                    @Html.TextBoxFor(v => v.MontoVendido, new { @class = "form-control", maxlength = "16", placeholder = Messages.MontoVendido, data_val_number = string.Format(ErrorMessages.Decimal, Messages.MontoVendido), autocomplete = "off" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group form-group-sm">
                            @Html.LabelWithTooltipFor(v => v.Comision, new
                                               {
                                                   @class = "col-md-4 control-label",
                                                   data_placement = "bottom",
                                                   title = "Porcentaje de comisión del vendedor."
                                               })
                            <div class="col-md-8">
                                @Html.TextBoxFor(v => v.Comision, new { @class = "form-control", maxlength = "6", placeholder = Messages.PorcentajeComision, data_val_number = string.Format(ErrorMessages.DecimalF, Messages.PorcentajeComision), autocomplete = "off" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group form-group-sm">
                            @Html.LabelWithTooltipFor(v => v.MontoComision, new
                                               {
                                                   @class = "col-md-4 control-label",
                                                   data_placement = "bottom",
                                                   data_html = "true",
                                                   title = "Monto de comisión para el vendedor. <br/> Se calcula sobre el Monto Vendido: <br/> Comisión =  Comisión (%) * Monto vendido"
                                               })
                            <div class="col-md-8">
                                <div class="input-group">
                                    <div class="input-group-addon">$</div>
                                    @Html.TextBoxFor(r => r.MontoComision, new { @class = "form-control", maxlength = "16", placeholder = Messages.MontoComision, data_val_number = string.Format(ErrorMessages.DecimalF, Messages.MontoComision), autocomplete = "off" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        @if (Model.Id > 0)
                        {
                            var relacionSaldoMonto = Model.MontoVendido == 0
                                ? 0
                                : Model.Saldo / Model.MontoVendido;
                            var progresoCobro = Math.Round((1 - relacionSaldoMonto) * 100);
                            <div class="col-md-offset-4 col-md-8">
                                <div class="progress" style="margin-bottom: 5px;">
                                    <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="@progresoCobro" aria-valuemin="0" aria-valuemax="100" style="width: @progresoCobro%;min-width: 2em;">
                                        <span class="sr-only">@progresoCobro%</span>
                                        @progresoCobro%
                                    </div>
                                </div>
                                <span class="text-primary">Progreso de cobro</span>
                            </div>
                        }
                    </div>
                    <div class="col-md-6">
                        <div class="form-group form-group-sm">
                            @Html.LabelFor(v => v.MontoNetoVendido, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                <div class="input-group">
                                    <div class="input-group-addon">$</div>
                                    @Html.TextBoxFor(v => v.MontoNetoVendido, new { @class = "form-control", placeholder = Messages.MontoNetoVendido, disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @*<div id="MsjMontoVendido" class="row" style="display: block;">
                        <div class="col-md-12">
                            <div class="alert alert-warning" role="alert">
                                El <b>Monto vendido</b> es menor al <b>Monto calculado</b>
                            </div>
                        </div>
                    </div>*@
                @if (Model.Cuotas.Any())
                {
                    <div>
                        <h4>Cuotas</h4>
                        @{ Html.RenderAction("VerCuotas", "Venta", new { cuotaViewModels = Model.Cuotas }); }
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<div class="col-md-12">
    <hr />
</div>
<div class="row">
    <div class="col-md-12">
        <div class="alert alert-danger validationSummary @(ViewData.ModelState.IsValid ? "hide" : "")" role="alert">
            <a class="close" data-hide="alert" aria-hidden="true">×</a>
            <b>Mensajes:</b>
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationSummary().ToString()))
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        loadVentaDetalleDataTable();

        $("#MontoComision").rules("add", {
            min: 0,
            messages: {
                min: "@Html.Raw(string.Format(ErrorMessages.MinValueF, Messages.MontoComision, "$ 0,00"))"
            }
        });
    });

    $('#MontoVendido').on('keyup change', function (e) {
        if (isValidKeyForCalc(e.keyCode)) {
            calcularMontoComisionVenta();
        }
        calcularDiferenciaVenta();
    });

    $('#Comision').on('keyup change', function (e) {
        if (isValidKeyForCalc(e.keyCode)) {
            calcularMontoComisionVenta();
        }
    });

    $('#MontoComision').on('keyup change', function (e) {
        if (isValidKeyForCalc(e.keyCode)) {
            var montoVendido = Globalize.parseFloat($("#MontoVendido").val());
            var montoComision = Globalize.parseFloat($(this).val());
            if (montoVendido > 0 && montoComision >= 0) {
                var comision = calcularComision(montoVendido, montoComision);
                $("#Comision").val(formatFloat(comision));
                calcularMontoNeto(montoVendido, montoComision);
            }
            else {
                $("#Comision").val("");
                $("#MontoNetoVendido").val("");
            }
        }
    });
</script>