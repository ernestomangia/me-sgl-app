@model ME.Libros.Web.Models.VentaItemViewModel

@using (Html.BeginForm("Crear", "VentaItem", FormMethod.Post, new { id = "formVentaItem", @class = "form-horizontal formEntidad" }))
{
    <div id="modalVentaItem" class="modal fade modalVentaItem" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Nuevo item</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group form-group-sm">
                        @Html.LabelFor(c => c.ProductoId, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(vi => vi.ProductoId, Model.Productos, "Seleccione", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group form-group-sm">
                        @Html.LabelFor(vi => vi.Cantidad, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(vi => vi.Cantidad, new { @class = "form-control", placeholder = "Cantidad", maxlength = "4", autocomplete = "off" })
                        </div>
                    </div>
                    <div class="form-group form-group-sm">
                        @Html.LabelFor(vi => vi.PrecioVentaVendido, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(vi => vi.PrecioVentaVendido, new { @class = "form-control", placeholder = Messages.PrecioVentaVendido, maxlength = "8", autocomplete = "off" })
                            <span class="label label-primary">Sugerido: $ <span id="precioSugerido">-</span></span>
                        </div>
                    </div>
                    <div class="form-group form-group-sm">
                        @Html.LabelFor(vi => vi.MontoItemVendido, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(vi => vi.MontoItemVendido, new { @class = "form-control", placeholder = Messages.MontoItemVendido, maxlength = "8", autocomplete = "off" })
                            <span class="label label-primary">Sugerido: $ <span id="subtotalSugerido">-</span></span>
                        </div>
                    </div>
                    <div class="form-group form-group-sm">
                        <div class="col-md-offset-2 col-md-10">
                            <h3>
                                <span class="label label-default" style="display: block;text-align: left;">
                                    Diferencia: $ <span id="diferencia">-</span>
                                </span>
                            </h3>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="row text-left">
                        <div class="col-md-12">
                            <div class="alert alert-danger validationSummary @(ViewData.ModelState.IsValid ? "hide" : "")" role="alert">
                                <a class="close" data-hide="alert" aria-hidden="true">×</a>
                                <b>Mensajes:</b>
                                @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationSummary().ToString()))
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-default btnCancelarAgregar" data-dismiss="modal">
                        <span class="glyphicon glyphicon-remove-circle" aria-hidden="true"></span>
                        Cancelar
                    </button>
                    <button type="submit" class="btn btn-success">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                        Agregar
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        setMaxlength();
        $("#Cantidad").val("");
        $("#PrecioVentaVendido").val("");
        $("#MontoItemVendido").val("");

        jQuery.validator.unobtrusive.parse("#formVentaItem");

        $("#Cantidad").rules("add", {
            min: 1,
            messages: {
                min: "La <b>Cantidad</b> debe ser mayor a 0 unidades</b>"
            }
        });

        $("#PrecioVentaVendido").rules("add", {
            min: 0,
            messages: {
                min: "El <b>Precio de venta vendido</b> debe ser mayor o igual a $ 0,00</b>"
            }
        });

        $("#MontoItemVendido").rules("add", {
            min: 0,
            messages: {
                min: "El <b>Subtotal vendido</b> debe ser mayor o igual a $ 0,00</b>"
            }
        });
    });

    $("#formVentaItem").on("submit", function (e) {
        e.preventDefault();
        validationSummaryVisibility(this);
        if ($("#formVentaItem").valid()) {
            crearVentaItem(this);
        }
    });

    $('#modalAgregarItem').on('hidden.bs.modal', function () {
        $("#contenedorVentaItem").empty();
    });

    $('#ProductoId').on('change', function () {
        getProducto();
    });

    $('#Cantidad').on('keyup change', function (e) {
        if (isValidKey(e.keyCode)) {
            var precioVentaVendido = Globalize.parseFloat($("#PrecioVentaVendido").val());
            var precioVentaCalculado = Globalize.parseFloat($("#precioSugerido").text());
            calcularMontosItem(precioVentaCalculado, precioVentaVendido);
        }
    });

    $('#PrecioVentaVendido').on('keyup change', function (e) {
        if (isValidKey(e.keyCode)) {
            var precioVentaVendido = Globalize.parseFloat($("#PrecioVentaVendido").val());
            calcularMontoItemVendido(precioVentaVendido);
            calcularDiferencia();
        }
    });

    $('#MontoItemVendido').on('keyup change', function () {
        var montoItemVendido = Globalize.parseFloat($(this).val());
        var cantidad = parseInt($("#Cantidad").val());
        if (cantidad > 0 && montoItemVendido >= 0) {
            var precioVentaVendido = montoItemVendido / cantidad;
            $("#PrecioVentaVendido").val(formatFloat(precioVentaVendido));
            calcularDiferencia();
        }
    });
</script>