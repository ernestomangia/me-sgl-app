@model IEnumerable<ME.Libros.Web.Models.VentaItemViewModel>

<a class="btn btn-success btnNuevo" data-toggle="modal" data-target="#modalAgregarItem" role="button">
    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
    Agregar item
</a>
<table id="example" class="dataTableCustom">
    <thead>
        <tr>
            <th class="columnaCodigo noSort">@Html.DisplayNameFor(model => model.Producto.Id)</th>
            <th>@Html.DisplayNameFor(model => model.Producto.Nombre)</th>
            <th>@Html.DisplayNameFor(model => model.Cantidad)</th>
            <th class="text-right" style="width: 150px;">@Html.DisplayNameFor(model => model.Producto.PrecioVenta)</th>
            <th class="columnaAcciones">Acciones</th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <th colspan="3" style="text-align:right">Total:</th>
            <th class="text-right">$ @Model.Sum(i => i.Producto.PrecioVenta)</th>
            <th></th>
        </tr>
    </tfoot>
    @foreach (var item in Model)
    {
        <tr>
            <td>@item.Id</td>
            <td>@item.Producto.Nombre</td>
            <td>@item.Cantidad</td>
            <td class="text-right">@item.Producto.PrecioVenta</td>
            <td>
                <a class="btn btn-warning btn-sm btnModificar" type="button" href="@Url.Action("Modificar", new { id = item.Id})">
                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                </a>
                <button class="btn btn-danger btn-sm btnEliminar" type="button" data-toggle="modal" data-target="#modalEliminar" onclick="javascript:setearId(@item.Id);" title="Eliminar">
                    <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                </button>
            </td>
        </tr>
    }
</table>

<input type="hidden" id="idEntidad" />
<script type="text/javascript">
    //$(document).ready(function () {
    //    $('#example').dataTable({
    //        "footerCallback": function (row, data, start, end, display) {
    //            var api = this.api(), data;

    //            // Remove the formatting to get integer data for summation
    //            var intVal = function (i) {
    //                return typeof i === 'string' ?
    //                    i.replace(/[\$,]/g, '') * 1 :
    //                    typeof i === 'number' ?
    //                    i : 0;
    //            };

    //            // Total over all pages
    //            total = api
    //                .column(4)
    //                .data()
    //                .reduce(function (a, b) {
    //                    return intVal(a) + intVal(b);
    //                });

    //            // Total over this page
    //            pageTotal = api
    //                .column(4, { page: 'current' })
    //                .data()
    //                .reduce(function (a, b) {
    //                    return intVal(a) + intVal(b);
    //                }, 0);

    //            // Update footer
    //            $(api.column(4).footer()).html(
    //                '$' + pageTotal + ' ( $' + total + ' total)'
    //            );
    //        }
    //    });
    //});
</script>